#!/bin/bash

usage() {
  local exitcode=${1:-1}

  echo "usage: aoc-init [ -y <year> ] [ -t <tag> ]"
  echo ""
  echo "Sets up a new AoC environment."
  echo ""
  echo "Options:"
  echo "* -y -- year (defaults to current year)"
  echo "* -t -- tag for Docker image (defaults to 'latest')"

  exit ${exitcode}
}

while getopts ":ht:y:" opt; do
  case ${opt} in
    h ) # help
      usage 0
      ;;

    t ) # tag for lang image
      AOC_TAG=${OPTARG}
      ;;

    y ) # year
      AOC_YEAR=${OPTARG}
      ;;

    \? )
      echo "invalid option -${OPTARG}" 1>&2
      usage
      ;;

    : )
      echo "option ${OPTARG} requires an argument" 1>&2
      usage
      ;;
  esac
done
shift $((OPTIND -1))

# for Linux? CURRENT_YEAR=$(date --iso-8601 | cut -d '-' -f 1)
CURRENT_YEAR=$(date -I | cut -d '-' -f 1)

AOC_TAG=${AOC_TAG:-latest}
AOC_YEAR=${AOC_YEAR:-${CURRENT_YEAR}}

if [[ -z "${AOC_YEAR}" ]]; then
  usage
elif ((AOC_YEAR < 2015 || AOC_YEAR > CURRENT_YEAR)); then
  echo "year out of range"
  usage
fi

##
## initalization that can take place outside the container
##

mkdir -pv years/${AOC_YEAR}/data
mkdir -pv years/${AOC_YEAR}/typescript

if [[ -e "years/${AOC_YEAR}/typescript/package.json" ]]; then
  echo "typescript directory already exists in years/${AOC_YEAR}"
else
  cp -pRv lang/typescript/skeleton/. years/${AOC_YEAR}/typescript

  ##
  ## now run initialization inside the container
  ##

  docker run \
    --interactive \
    --mount type=bind,src=./years/${AOC_YEAR}/typescript,dst=/aoc/src \
    --mount type=bind,src=./years/${AOC_YEAR}/data,dst=/aoc/data \
    --mount type=volume,src=aoc-typescript-${AOC_YEAR}-cache,dst=/home/aoc/.cache \
    --name aoc-typescript \
    --rm \
    --tty \
    ghcr.io/krisalyssa/aoc/aoc-typescript:${AOC_TAG} \
    -c "bin/init ${AOC_DAY}"
fi
