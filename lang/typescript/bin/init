#!/bin/bash

##
## initialization which needs to take place inside the container
##

usage() {
        echo "usage: init" 2>&1
        exit 1
}

cd /aoc/src || exit 1

## this was done in Dockerfile
# sudo corepack enable
corepack prepare yarn@stable --activate
yarn init -2

yarn config set enableGlobalCache false
# sed -i -r -e 's:^#(!\.yarn/cache):\1:' -e 's:^(\.pnp\.\*):#\1:' .gitignore

jq '.name = "aoc" | .main = "index.ts" | .scripts = {day: "ts-node index.ts"}' package.json >package.json.new
rm package.json
mv package.json.new package.json

yarn add \
        commander \
        ts-node \
        typescript

yarn add --dev \
        @commander-js/extra-typings \
        @types/eslint \
        @types/eslint-config-prettier \
        @types/node \
        eslint \
        eslint-config-prettier \
        jest \
        ts-jest

yarn add --dev --exact \
        prettier

# yarn dlx @yarnpkg/sdks vscode vim
