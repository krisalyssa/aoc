#!/usr/bin/env bash

##
## start a container for a language
##

usage() {
    local exitcode=${1:-1}

    langs=()
    while IFS= read -r -d '' filename; do
        langs+=("$(basename "$(dirname "${filename}")")")
    done < <(find lang -type f -name 'Dockerfile' -print0 | sort -z)

    echo "usage: aoc-start -l <language> [ -y <year> ] [ -t <tag> ] [ -d ]"
    echo "       aoc-start [ -y <year> ] [ -t <tag> ] [ -d ] <language>"
    echo ""
    echo "Starts a Docker container for the language, with data files mounted."
    echo ""
    echo "Options:"
    echo "* -l -- language"
    echo "* -y -- year (defaults to current year)"
    echo "* -t -- tag for language Docker image (defaults to 'latest')"
    echo "* -d -- detach the container (run it in the background)"
    echo ""
    echo "<language> must be one of: " "${langs[@]}"
    echo ""
    echo "NOTE: -d does not take a value and is not used to specify a day, unlike other commands."

    exit "${exitcode}"
}

while getopts ":dhl:t:y:" opt; do
    case ${opt} in
        d) # detach
            DETACH=true
            ;;

        h) # help
            usage 0
            ;;

        l) # lang
            AOC_LANG=${OPTARG}
            ;;

        t) # tag for lang image
            TAG=${OPTARG}
            ;;

        y) # year
            YEAR=${OPTARG}
            ;;

        \?)
            echo "invalid option -${OPTARG}" 1>&2
            usage
            ;;

        :)
            echo "option ${OPTARG} requires an argument" 1>&2
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

# for Linux? CURRENT_YEAR=$(date --iso-8601 | cut -d '-' -f 1)
CURRENT_YEAR=$(date -I | cut -d '-' -f 1)

AOC_LANG=${AOC_LANG:-$1}
TAG=${TAG:-latest}
YEAR=${YEAR:-${CURRENT_YEAR}}

if [[ -z "${AOC_LANG}" ]]; then
    usage
elif [[ ! -d "lang/${AOC_LANG}" ]]; then
    echo "unknown language ${AOC_LANG}"
    usage
fi

if [[ -z "${YEAR}" ]]; then
    usage
elif ((YEAR < 2015 || YEAR > CURRENT_YEAR)); then
    echo "year out of range"
    usage
fi

if [[ -x "lang/${AOC_LANG}/aoc-start" ]]; then
    "lang/${AOC_LANG}/aoc-start" -y "${YEAR}" -t "${TAG}" ${DETACH:+-d}
else
    CONTAINER_NAME="aoc-${AOC_LANG}-${YEAR}"

    if [[ "$(docker ps --all --format json | jq -r '.Names')" == "${CONTAINER_NAME}" ]]; then
        case $(docker ps --all --format json | jq -r --arg name "${CONTAINER_NAME}" 'select(.Names == $name) | .State') in
            running)
                # echo "container is already running"
                ;;

            exited)
                # echo "starting container"
                docker start "${CONTAINER_NAME}" > /dev/null
                ;;
        esac

        # echo "attaching to container"
        docker attach "${CONTAINER_NAME}"
    else
        # shellcheck source=/dev/null
        [[ -r "lang/${AOC_LANG}/.aocrc" ]] && source "lang/${AOC_LANG}/.aocrc"

        # shellcheck disable=SC2086
        docker run \
            ${DETACH:+--detach} \
            --interactive \
            --mount "type=bind,src=./years/${YEAR}/${AOC_LANG},dst=/aoc/src" \
            --mount "type=bind,src=./years/${YEAR}/data,dst=/aoc/data" \
            ${ADDITIONAL_MOUNTS} \
            --name "${CONTAINER_NAME}" \
            --tty \
            ${ADDITIONAL_FLAGS} \
            ghcr.io/krisalyssa/aoc/aoc-${AOC_LANG}:${TAG} \
            -c "bin/start"
    fi
fi
