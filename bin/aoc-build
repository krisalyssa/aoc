#!/usr/bin/env bash

##
## build an image for a language for local testing
##

usage() {
    local exitcode=${1:-1}

    langs=()
    for filename in $(find lang -type f -name 'Dockerfile' | sort); do
        langs+=("$(basename $(dirname ${filename}))")
    done

    echo "usage: aoc-build -l <language> [ -t <tag> ]"
    echo "       aoc-build [ -t <tag> ] <language>"
    echo ""
    echo "Builds a Docker image for the language."
    echo ""
    echo "Options:"
    echo "* -l -- language"
    echo "* -t -- tag for language Docker image (defaults to 'local')"
    echo ""
    echo "<language> must be one of: ${langs[@]}"

    exit ${exitcode}
}

while getopts ":hl:t:" opt; do
    case ${opt} in
        h) # help
            usage 0
            ;;

        l) # lang
            AOC_LANG=${OPTARG}
            ;;

        t) # tag for lang image
            AOC_TAG=${OPTARG}
            ;;

        \?)
            echo "invalid option -${OPTARG}" 1>&2
            usage
            ;;

        :)
            echo "option ${OPTARG} requires an argument" 1>&2
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

AOC_LANG=${AOC_LANG:-$1}
AOC_TAG=${AOC_TAG:-local}

if [[ -z "${AOC_LANG}" ]]; then
    usage
elif [[ -d "lang/${AOC_LANG}" ]]; then
    if [[ -x "lang/${AOC_LANG}/build" ]]; then
        shift
        "lang/${AOC_LANG}/build" $@
    elif [[ ! -r "lang/${AOC_LANG}/Dockerfile" ]]; then
        echo "no Dockerfile for language ${AOC_LANG}"
        exit 1
    else
        docker build -t "ghcr.io/krisalyssa/aoc/aoc-${AOC_LANG}:${AOC_TAG}" -f "lang/${AOC_LANG}/Dockerfile" "lang/${AOC_LANG}"
    fi
else
    echo "unknown language '${AOC_LANG}'"
    exit 1
fi
